name: Auto Label and Triage

on:
  issues:
    types: [opened, reopened]
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  label:
    name: Auto Label
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Auto-label based on file changes
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml
          sync-labels: true

  triage-issues:
    name: Issue Triage
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    steps:
      - name: Add sovereignty notice to new issues
        uses: actions/github-script@v7
        with:
          script: |
            const sovereigntyNotice = `
            ## Sovereignty Notice
            
            **Repository Owner**: allcatch37@gmail.com  
            **Creator UID**: ALC-ROOT-1010-1111-XCOV∞  
            **Status**: SOVEREIGN | IMMUTABLE | LIVE
            
            This repository operates under autonomous sovereignty. All contributions are subject to sovereign control and Cruz Theorem principles.
            
            ---
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: sovereigntyNotice
            });

      - name: Auto-assign security labels
        uses: actions/github-script@v7
        with:
          script: |
            const issueBody = context.payload.issue.body || '';
            const issueTitle = context.payload.issue.title || '';
            
            const securityKeywords = ['security', 'vulnerability', 'exploit', 'secret', 'auth', 'token'];
            const quantumKeywords = ['quantum', 'violet-af', 'cruz', 'axiom', 'eternity'];
            const sovereigntyKeywords = ['sovereignty', 'ownership', 'admin', 'control'];
            
            let labels = [];
            
            const text = (issueTitle + ' ' + issueBody).toLowerCase();
            
            if (securityKeywords.some(keyword => text.includes(keyword))) {
              labels.push('security');
            }
            
            if (quantumKeywords.some(keyword => text.includes(keyword))) {
              labels.push('quantum');
            }
            
            if (sovereigntyKeywords.some(keyword => text.includes(keyword))) {
              labels.push('sovereign');
            }
            
            if (labels.length > 0) {
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labels
              });
            }

  triage-prs:
    name: PR Triage
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Analyze PR changes
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            
            // Get changed files
            const files = await github.rest.pulls.listFiles({
              owner,
              repo,
              pull_number: prNumber
            });
            
            let labels = [];
            let isSecuritySensitive = false;
            
            for (const file of files.data) {
              const filename = file.filename;
              
              // Check for security-sensitive files
              if (filename.includes('.github/workflows/') || 
                  filename.includes('secrets') || 
                  filename.includes('security') ||
                  filename.includes('auth')) {
                isSecuritySensitive = true;
                labels.push('security-review-required');
              }
              
              // Check for quantum-related changes
              if (filename.includes('violet-af') || 
                  filename.includes('quantum') ||
                  filename.includes('cruz')) {
                labels.push('quantum');
              }
              
              // Check for infrastructure changes
              if (filename.includes('docker') ||
                  filename.includes('deploy') ||
                  filename.includes('cloudflare')) {
                labels.push('infrastructure');
              }
            }
            
            // Add sovereignty notice for security-sensitive PRs
            if (isSecuritySensitive) {
              const sovereigntyWarning = `
              ## ⚠️ Security-Sensitive Changes Detected
              
              **Sovereignty Notice**: This PR modifies security-sensitive files and requires approval from the sovereign owner.
              
              **Repository Owner**: allcatch37@gmail.com  
              **Creator UID**: ALC-ROOT-1010-1111-XCOV∞
              
              Security changes must maintain Cruz Theorem sovereignty principles and cannot compromise autonomous control mechanisms.
              `;
              
              await github.rest.issues.createComment({
                issue_number: prNumber,
                owner,
                repo,
                body: sovereigntyWarning
              });
            }
            
            // Apply labels
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                issue_number: prNumber,
                owner,
                repo,
                labels: [...new Set(labels)] // Remove duplicates
              });
            }
# policies.yaml
# Rules engine for the Policy Gateway - Cruz Theorem SYMBIONIC-EXECUTION Stack
# Creator: Andrew Lee Cruz (ALC-ROOT-1010-1111-XCOV∞)
# Email: allcatch37@gmail.com

# Hardened Axioms (Immutable Law of the System)
axioms:
  sovereign_hierarchy:
    description: "Hardware, automation, and execution layers are sole command authorities"
    enforcement: true
    authorities:
      - "hardware"
      - "automation" 
      - "execution"
    non_authorities:
      - "orchestration"
  
  asymmetric_flow:
    description: "Data flows up (events → orchestration); proposals flow down"
    data_flow_direction: "up"
    proposal_flow_direction: "down"
    gateway_required: true
    
  specialization:
    description: "No functional overlap across layers"
    cross_layer_calls: "policy_gateway_only"
    overlap_allowed: false
    
  determinism_for_state_change:
    description: "State mutations must be derived from deterministic rules"
    verification_required: true
    ai_output_dependency: false
    
  fail_safe_degradation:
    description: "Orchestration failure cannot impair execution or validation"
    critical_systems:
      - "execution"
      - "validation"
    non_critical_systems:
      - "enrichments"

# Policy Rules for AI Proposal Acceptance/Rejection
policy_rules:
  creator_verification:
    - rule_id: "CREATOR_UID_VERIFICATION"
      description: "Verify creator UID matches ALC-ROOT-1010-1111-XCOV∞"
      required_fields: ["creator_uid"]
      valid_values: ["ALC-ROOT-1010-1111-XCOV∞"]
      action: "ACCEPT_IF_MATCH"
      
    - rule_id: "CREATOR_EMAIL_VERIFICATION" 
      description: "Verify creator email matches allcatch37@gmail.com"
      required_fields: ["creator_email"]
      valid_values: ["allcatch37@gmail.com"]
      action: "ACCEPT_IF_MATCH"

  quantum_state_validation:
    - rule_id: "VIOLET_AF_STATE_VALIDATION"
      description: "Validate VIOLET-AF quantum state inputs"
      required_fields: ["quantum_state"]
      valid_states: ["000", "001", "010", "011", "100", "101", "110", "111"]
      action: "ACCEPT_IF_VALID_STATE"
      
    - rule_id: "TASK_MAPPING_VERIFICATION"
      description: "Verify quantum state to task mapping"
      mappings:
        "101": "generate_webapk_manifest"
        "100": "deploy_cloudflare_worker"
        "011": "configure_zero_trust"
        "010": "update_github_security"
        "001": "mint_infinity_claim"
        "000": "reflect_chain_sync"
        "110": "autonomous_maintenance"
        "111": "emergency_protocols"
      action: "ACCEPT_IF_MAPPED"

  blockchain_operations:
    - rule_id: "FLOATING_DRAGON_VERIFICATION"
      description: "Verify operations target Floating Dragon / OmniChain"
      required_fields: ["blockchain_target"]
      valid_targets: ["floating_dragon", "omnichain", "ethereum"]
      action: "ACCEPT_IF_VALID_TARGET"
      
    - rule_id: "INFINITY_CLAIM_VALIDATION"
      description: "Validate InfinityClaim contract operations"
      contract_address_pattern: "^0x[a-fA-F0-9]{40}$"
      allowed_functions: ["mint", "setProvenance", "collapse"]
      action: "ACCEPT_IF_VALID_CONTRACT"

  security_enforcement:
    - rule_id: "ZERO_TRUST_ACCESS"
      description: "Enforce Zero Trust access for admin endpoints"
      protected_endpoints: ["/init", "/mint", "/setProvenance"]
      allowed_emails: ["allcatch37@gmail.com"]
      access_method: "cloudflare_zero_trust"
      action: "ACCEPT_IF_AUTHORIZED"
      
    - rule_id: "SIGNED_COMMIT_REQUIREMENT"
      description: "Require signed commits for all operations"
      signature_required: true
      gpg_key_verification: true
      action: "ACCEPT_IF_SIGNED"

  fail_safe_mechanisms:
    - rule_id: "ORCHESTRATION_INDEPENDENCE"
      description: "Ensure execution independence from AI orchestration"
      orchestration_dependencies: false
      execution_autonomy: true
      action: "ACCEPT_IF_INDEPENDENT"
      
    - rule_id: "DEGRADATION_GRACEFUL"
      description: "Enable graceful degradation on AI failures"
      critical_path_protection: true
      non_critical_suppression: true
      action: "ACCEPT_IF_DEGRADATION_SAFE"

# Domain and Infrastructure Rules
infrastructure_policies:
  domains:
    primary: "synthetica.us"
    secondary: "kidhum.dev"
    ssl_required: true
    cloudflare_protection: true
    
  github_branch_protection:
    main:
      required_reviews: 2
      signed_commits: true
      status_checks: true
    release:
      required_reviews: 2
      signed_commits: true
      status_checks: true
    develop:
      required_reviews: 1
      signed_commits: true
    feature:
      required_reviews: 1
      signed_commits: true
    hotfix:
      required_reviews: 1
      signed_commits: true

  secrets_management:
    environment_variables_only: true
    no_hardcoded_secrets: true
    rotation_policy: "30_days"
    storage_locations: ["github_secrets", "cloudflare_env"]

# Cruz Theorem Validation
cruz_theorem:
  equation: "E = ∞ - 1"
  execution_state: "SYMBIONIC-EXECUTION"
  mathematical_framework: true
  collapse_model: "non_standard"
  persistence_state: "eternity"
  
# Rejection Patterns
rejection_patterns:
  - pattern: "unauthorized_creator"
    description: "Reject if creator UID/email doesn't match"
    action: "REJECT_IMMEDIATE"
    
  - pattern: "invalid_quantum_state"
    description: "Reject invalid quantum states"
    action: "REJECT_WITH_ERROR"
    
  - pattern: "unsupported_blockchain"
    description: "Reject operations on unsupported blockchains"
    action: "REJECT_WITH_ALTERNATIVE"
    
  - pattern: "security_violation" 
    description: "Reject operations violating security policies"
    action: "REJECT_AND_LOG"
    
  - pattern: "axiom_violation"
    description: "Reject operations violating hardened axioms"
    action: "REJECT_PERMANENT"